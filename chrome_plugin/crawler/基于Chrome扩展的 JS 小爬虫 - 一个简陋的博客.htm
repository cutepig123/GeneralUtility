<!DOCTYPE html>
<!-- saved from url=(0038)http://lmk123.duapp.com/chrome-crawler -->
<html lang="zh-CN"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8"> <meta charset="utf-8"> <title>基于Chrome扩展的 JS 小爬虫 - 一个简陋的博客</title> <meta name="description" content="注意：本篇不是可供下载的Chrome扩展的介绍，而是一篇（算是）制作教程，不可避免的带有一些专业色彩，你可能不会有兴趣阅读下去。"> <meta name="keywords" content="chrome,爬虫"> <style type="text/css"></style></head> <body> <header>再也没有比这个更简陋的博客了</header> <section id="content"> <h1>基于Chrome扩展的 JS 小爬虫</h1><div>发布：2013年5月26日 <br>修改：2013年5月26日 <br>标签：chrome,爬虫</div><div><p><b>注意：本篇不是可供下载的Chrome扩展的介绍，而是一篇（算是）制作教程，不可避免的带有一些专业色彩，你可能不会有兴趣阅读下去。</b></p>

        <p>这两天一直在寝室看书（以及玩游戏），以至于冷落了我的博客 – -甚至在昨天，我制作完这个小爬虫，兴致勃勃的准备发布到博客上，却发现我的博客被黑了= =好在黑客还算有点良心，仅修改了我的主页，但后台完全毁了，唉。<br>
        </p>

        <p>之所以没及早发现我博客的异常，是因为昨天发现<a title="访问需翻墙" href="https://crxdoc-zh.appspot.com/extensions/" target="_blank">墙外的中文版chrome文档</a>更新了Chrome
            26的稳定版（stable）的开发文档，于是琢磨着再次写个爬虫把整个文档爬下来（上次的爬虫很简单，仅能抓取一个页面上的所有链接页面，而对抓取回来的页面上的新链接束手无策，以至于我总是发现文档里有打不开的链接）。
        </p>

        <p>其实最主要的一点：<b>我想彻底甩掉jQuery！</b>由于我们学校的教材发的是
            《jQuery权威指南》，但此前完全没有讲过JavaScript，这导致我陷入了“离开jQuery就写不了脚本”的窘境。为此我专门买了《JavaScript权威指南》一书，而也正是参考这本书，让我成功完成了这个小爬虫！
        </p>

        <h3>好，开始吧！</h3>

        <p>在开始制作这个扩展之前，我首先在我自己的电脑上搭建了一个网站，这个网站只有一个文件：savehtml.ashx。这个文件的作用就是接收扩展发送给它的 HTML
            字符串和文件名，然后生成对应的HTML文件。很多其它的技术能实现同样的功能（PHP、ASP、JAVA等），这里就不多赘述了。后面我会用“接口”来指代这个东西。</p>

        <p>我把这个扩展设计成了一个<a href="http://www.lmk123.com/docs/browserAction.html" target="_blank">浏览器按钮</a>，当点击扩展图标时，就在当前页面注入<a href="http://www.lmk123.com/docs/content_scripts.html" target="_blank">内容脚本</a>进行爬取。所以扩展的
            <b><a href="http://www.lmk123.com/docs/manifest.html" target="_blank">manifest.json</a></b> 应该这样写：</p>
<pre>{
  //关于 manifest.json 的详情请参阅<a href="http://www.lmk123.com/docs/manifest.html" target="_blank">格式：清单文件</a>，这里仅提供简单的注释

  //下面两个字段是必须要有的
  "name": "小爬虫",
  "manifest_version": 2,  //这个字段的值必须是 2

  "version": "1.0",   //指定扩展的版本
  "description": "接口http://localhost:12345/savehtml/savehtml.ashx?h=文件内容&amp;n=文件名字",  //扩展的描述信息

  //&lt;all_urls&gt;表示能对任意网站使用这个扩展；同时由于需要在页面中注入脚本，所以要用到 <a href="http://www.lmk123.com/docs/tabs.html" target="_blank">tabs</a> 权限。
  "permissions": ["<all_urls>","tabs"],  //关于 permissions 字段的详情请参阅<a href="http://www.lmk123.com/docs/declare_permissions.html" target="_blank">声明权限</a>

  //关于 background 字段请参阅<a href="http://www.lmk123.com/docs/event_pages.html" target="_blank">事件页面</a>
  "background": {"scripts": ["b.js"],"persistent": false},

  //指定这个字段后，将会在浏览器右上角显示你的扩展的图标，这里没有指定图标，所以会出现一个默认的拼图图标
  //关于 brower_action 字段请参阅<a href="http://www.lmk123.com/docs/browserAction.html" target="_blank">浏览器按钮</a>
  "browser_action": {"default_title": "爬下这个站"}  //注意：最后一个字段后面（例如这里的“}”后面）不要多一个逗号“,”，否则载入扩展时会报错。
}</all_urls></pre>
        <p>接下来，把这个文件放进任意一个文件夹中，并将 manifest.json 文件复制进去，再创建一个 b.js
            文件，就可以载入你的扩展了。<a href="http://www.lmk123.com/docs/getstarted.html#unpacked" target="_blank">入门</a>里已有详细的过程。
        </p>

        <p><b>注意</b>：文件夹路径里（比如我的就是 E:\LEE\Documents\MyStudy\ChromeExc\Dev\saveHtml）<b>绝对不要出现中文</b>，否则载入时会报错。</p>

        <p>若载入成功，就会出现这个界面：</p>

        <p>
            <img src="./基于Chrome扩展的 JS 小爬虫 - 一个简陋的博客_files/packer1.png" alt="packer1" class="alignleft size-medium wp-image-68">
        </p>

        <p>同时右上角多了一个拼图图标。</p>

        <h3>接下来就是见证奇迹的时刻</h3>

        <p>在这个扩展里，<a href="http://www.lmk123.com/docs/event_pages.html" target="_blank">事件页面</a>仅有一个作用，就是当点击右上角的浏览器按钮时，将<a href="http://www.lmk123.com/docs/content_scripts.html" target="_blank">内容脚本</a>插入到页面中，所以
            b.js 文件里只有一句话：</p>

        <p><code>chrome.browserAction.onClicked.addListener(function ( ) { chrome.tabs.executeScript({ file: 'c.js'
            }); });</code></p>

        <p>其中 ，<b>c.js</b>
            就是将要插入到页面中的<a href="http://www.lmk123.com/docs/content_scripts.html" target="_blank">内容脚本</a>，它是这个扩展的核心，接下来的所有内容都是围绕这个文件展开的。
        </p>

        <p>当我做到这一步的时候，我停下来想了想接下来该怎么做。我的想法是先分析当前页面上的所有链接并保存起来，然后逐个抓取这些链接，并将这些链接里的新链接也保存起来，然后分析下一个链接。有了思路，就可以开始 coding
            了：</p>
<pre>  //声明用于保存链接的数组 和 用于分析链接的正则表达式
  //因为我仅想抓取<a class="outlink" title="访问需翻墙" href="https://crxdoc-zh.appspot.com/extensions/" target="_blank">墙外的中文版chrome文档</a>
  //所以这个正则非常简单，并且不一定能在别的网站上使用
  var aDuiLie = [ ] , aP = /&lt;a href="[^.#][^"/#:]+?(?=["#])/g ;
  //请无视这丑陋的变量名。= =</pre>
        <p>因为要等数组里的一个链接处理完成后再处理下一个链接，所以我还需要一个变量来保存当前处理的是数组中的第几个链接（或许叫“索引”你会更熟悉）。</p>
        <pre>  var i = 0 ;</pre>
        <p>声明完这些变量，我想，可以把这个程序分为三部分：一个部分用于获取指定链接的 HTML
            字符串，一个部分用于将获取到的字符串发送至接口以保存成文件，最后一个部分用于分析获取到的HTML字符串并把里面新出现的链接推进数组。</p>

        <p>我用三个函数实现了上面所说的三个部分，同时我庆祝一下自己终于不依赖jQuery里的$.ajax了^ ^：</p>
<pre>//第一个函数用于获取指定链接的 HTML 字符串
function getHtml(u) {
    //当开始获取一个链接的HTML字符串时，说明已经开始对新的链接进行分析了，所以这里的索引值要加一
    i += 1;
    //如果这个索引值大于数组里链接的个数，说明数组里的链接都处理完了，此时退出这个函数
    if (i &gt; aDuiLie.length) { return; }
    //在控制台显示进度以方便查看
    console.log('正在请求' + u);
    //写扩展就是好，不用考虑各种蛋疼的兼容性- -
    var request = new XMLHttpRequest() ;
    request.open('GET', u);
    request.onreadystatechange = function () {
        if (request.readyState === 4 &amp;&amp; request.status === 200) {
            //这里的 handlerHtml 函数就是上面所说的最后一个部分的函数
            setTimeout(handlerHtml, 300, request.responseText);
            //思考题：上面的语句中为什么会延迟调用 handlerHtml 函数？
        } else if (request.readyState === 4 &amp;&amp; request.status === 404) {
            //如果这个链接打不开，就跳过这个链接，直接进行下一个
            console.error('请求' + u + '时失败，跳过。');
            console.log('\n队列中现有' + aDuiLie.length + '个目标，下面请求第' + (i + 1) + '个。');
            //这里调用了这个函数本身，而索引 i 会在这个函数开始时加一，所以这里无需担心会重复处理这个错误的链接
            //同时我手动添加了链接的前缀：前面说过，写这个扩展我只是想抓取chrome文档。- -
            setTimeout(getHtml, 300, 'https://crxdoc-zh.appspot.com/extensions/' + aDuiLie[i]);
        }
    };
    request.send(null);
}</pre>
        <p>然后是第二个函数 sendHtml ，将获取到的 html 字符串发送至接口：</p>
<pre>//参数 h 是上一个函数获取到的 HTML 字符串，参数 n 是文件名
function sendHtml(t, n) {
    var r = new XMLHttpRequest();
    //这个地址是我在自己的电脑上搭建的网站的地址，本文开头进行过说明
    r.open('POST', 'http://localhost:12345/savehtml/savehtml.ashx');
    r.onreadystatechange = function () {
        //如果保存失败（保存成功会返回字符串 1），则进行提示
        if (r.readyState === 4 &amp;&amp; r.responseText !== '1') { console.error('服务器端保存' + n + '文件失败。'); }
    };
    r.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
    //当没有文件名时（也就是在点击扩展按钮的那个页面是没有文件名的，因为我是从主页开始抓取，所以此时这里的文件名是 index.html）
    r.send('h=' + encodeURIComponent(t) + '&amp;n=' + (n || 'index.html'));
}</pre>
        <p>现在我们定义完了这两个函数，可是这两个函数都无法单独工作：第一个函数依赖数组 aDuiLie 来获取指定的页面，但是刚开始 aDuiLie 是空的；而第二个函数依赖于第一个函数获取到 HTML
            字符串。所以我们需要最后一个函数 handlerHtml 来分析链接并将上面两个函数“串”起来：</p>
<pre>function handlerHtml(targetHtml) {
    //首先将内容发送至服务器保存（思考题：这里的索引为什么要减一？ ^ ^）
    sendHtml(targetHtml, aDuiLie[i - 1]);  //若你没有本文开头提到的“接口”，可以注释掉这一行，仅看一看控制台显示的内容
    //分析出所有的链接
    var re = targetHtml.match(aP) , s ;
    for (var x = re.length , y = 0; y &lt; x; y += 1) {
        //因为分析出的链接是  &lt;a href="getstarted.html  这样的形式，所以首先得截取出真正需要的部分（也就是文件名）
        s = re[y].slice(9);
        //如果队列数组里没有这个文件名，就把它加入数组，并在控制台给出提示
        aDuiLie.some(function (z) { return z === s; }) || (aDuiLie.push(s), console.warn(s + '加入了队列。'));
        //如果这一次循环是最后一次，则开始对队列数组里的下一个链接进行处理
        if (y + 1 === re.length) {
            console.log('\n队列中现有' + aDuiLie.length + '个目标，下面请求第' + (i + 1) + '个。');
            getHtml('https://crxdoc-zh.appspot.com/extensions/' + aDuiLie[i]);
        }
    }
}</pre>
        <h3>呼，大功告成</h3>

        <p>上面的三个函数看起来好像能和睦相处，接下来我们只要从当前页面开始进行分析就行了：</p>
<pre>//这里我加入了文档类型声明，让接口能生成一个完整的网页文件
handlerHtml('&lt;!DOCTYPE html&gt;&lt;html&gt;' + document.getElementsByTagName('html')[0].innerHTML + '&lt;/html&gt;');</pre>
        <p>
            好！接下来我们就可以试着运行一下了！做了这么多修改，首先要在<b>扩展程序页面</b>重新载入一下我们的小爬虫扩展。然后进入<a class="outlink" title="访问需翻墙" href="https://crxdoc-zh.appspot.com/extensions/" target="_blank">墙外的中文版chrome文档</a>。若你的电脑不能翻墙，也可以在<a style="left: 0px;" href="http://www.lmk123.com/docs/" target="_blank">我的Chrome文档</a>上做试验；若你没有本文开头提到的“接口”，你可以注释掉
            handlerHtml 函数里的 sendHtml 那一句，仅看一看控制台显示的信息，看看扩展是否运行正常。</p>

        <p>顺便附上控制台截图～</p>

        <p>
            <img src="./基于Chrome扩展的 JS 小爬虫 - 一个简陋的博客_files/packer2.png" alt="packer2" class="alignleft size-medium wp-image-69">
        </p>

        <h3>最后</h3>

        <p>
            自己从头至尾读了一遍，发现过程真是风平浪静，但实际上我昨日花了一整天的时间处理出现的各种问题（比如文中的思考题部分），这里要感谢群里的大神们，以及《JavaScript权威指南》，最后感谢能从头至尾看完的你（从开头直接滑动滚动条到这里的不算）。</p>

        <p>最后的最后希望我的小博客能有更多的人来啊！（虽然确实很空就是了。。）</p></div><form method="post" action="http://lmk123.duapp.com/chrome-crawler/reply"> <textarea placeholder="你的评论" name="comment" required=""></textarea> <div><input placeholder="昵称" name="nickname"> <input type="email" name="email" placeholder="邮箱"> <input type="url" name="url" placeholder="个人网址"></div> <label><input type="checkbox">显示选填项</label><input type="submit" value="提交"></form> </section> <footer> 这个简陋的博客基于百度云与NodeJS。</footer><script src="./基于Chrome扩展的 JS 小爬虫 - 一个简陋的博客_files/ejs.js"></script><script src="./基于Chrome扩展的 JS 小爬虫 - 一个简陋的博客_files/milk.js"></script><span style="display:none"> <script src="http://s85.cnzz.com/stat.php?id=5082683&web_id=5082683"></script></span> <style class="pkt_bm_style">                .pkt_bm_loading {                    -webkit-box-shadow: 2px 2px 3px rgba(0,0,0,0.3);                    -moz-box-shadow: 2px 2px 3px rgba(0,0,0,0.3);                    background-color: #f0f0f0;                    border: 2px solid #fff;                    border-radius: 4px;                    box-shadow: 2px 2px 3px rgba(0,0,0,0.3);                    font-size: 16px !important;                    height: 4em !important;                    margin: 0 0.95em 1em 1em;                    opacity: 0;                    padding: 0;                    text-align: center;                    visibility: hidden;                    width: 21em;                    z-index: 9999999998;                }                .pkt_bm_loading_active {                    -moz-animation: show-loading 0.3s ease-out;                    -webkit-animation: show-loading 0.3s ease-out;                    -webkit-transform: translate3d(0,1em,0);                    animation: show-loading 0.3s ease-out;                    transform: translate3d(0,1em,0);                    opacity: 1;                    visibility: visible;                }                .pkt_bm_error_active {                    -webkit-transform: translate3d(0,1em,0);                    transform: translate3d(0,1em,0);                    height: auto !important;                    opacity: 1;                    visibility: visible;                }                .pkt_bm_error_active h2 {                    color: #2e2e2e !important;                    font-family: helvetica,arial,sans-serif !important;                    font-size: 22px !important;                    font-weight: bold !important;                    line-height: 1.1 !important;                    padding: 1em 0.25em 0 !important;                    margin: 0 !important;                    text-transform: none !important;                }                .pkt_bm_error_active p {                    color: #555 !important;                    font-family: helvetica,arial,sans-serif !important;                    font-size: 14px !important;                    line-height: 1.3 !important;                    padding: 1em 1em !important;                    margin: 0 !important;                }                .pkt_bm_error_active a {                    color: #4aaca7 !important;                    font-weight: bold !important;                    text-decoration: none !important;                }                .pkt_bm_error_active a:hover {                    color: #265956 !important;                }                @-moz-keyframes spin {                    to {                        -moz-transform: rotate(1turn);                        -webkit-transform: rotate(1turn);                        transform: rotate(1turn);                    }                }                @-webkit-keyframes spin {                    to {                        -moz-transform: rotate(1turn);                        -webkit-transform: rotate(1turn);                        transform: rotate(1turn);                    }                }                @-webkit-keyframes show-loading {                    0% {                        -webkit-transform: translate3d(0,0.5em,0);                        transform: translate3d(0,0.5em,0);                        opacity: 0;                        visibility: hidden;                    }                    1% {                        -webkit-transform: translate3d(0,0.5em,0);                        transform: translate3d(0,0.5em,0);                        opacity: 0;                        visibility: visible;                    }                    100% {                        -webkit-transform: translate3d(0,1em,0);                        transform: translate3d(0,1em,0);                        opacity: 1;                        visibility: visible;                    }                }                @keyframes show-loading {                    0% {                        -webkit-transform: translate3d(0,0.5em,0);                        transform: translate3d(0,0.5em,0);                        opacity: 0;                        visibility: hidden;                    }                    1% {                        -webkit-transform: translate3d(0,0.5em,0);                        transform: translate3d(0,0.5em,0);                        opacity: 0;                        visibility: visible;                    }                    100% {                        -webkit-transform: translate3d(0,1em,0);                        transform: translate3d(0,1em,0);                        opacity: 1;                        visibility: visible;                    }                }                .page_extloading_spinner {                    position: relative !important;                    display: inline-block !important;                    width: 5em !important;                    height: 5em !important;                    margin: 4em 0 0 !important;                    font-size: 5px !important;                    text-indent: 999em !important;                    overflow: hidden !important;                    -moz-animation: spin 0.7s infinite steps(8) !important;                    -webkit-animation: spin 0.7s infinite steps(8) !important;                    animation: spin 0.7s infinite steps(8) !important;                }                .page_extloading_spinner:before,                .page_extloading_spinner:after,                .page_extloading_spinner > div:before,                .page_extloading_spinner > div:after {                    content: '' !important;                    position: absolute !important;                    top: 0 !important;                    left: 2.25em !important;                    width: .5em !important;                    height: 1.5em !important;                    border-radius: .2em !important;                    background: #eee !important;                    box-shadow: 0 3.5em #eee !important;                    -webkit-transform-origin: 50% 2.5em !important;                    -moz-transform-origin: 50% 2.5em !important;                    transform-origin: 50% 2.5em !important;                }                .page_extloading_spinner:before {                    background: #555 !important;                }                .page_extloading_spinner:after {                    -webkit-transform: rotate(-45deg) !important;                    -moz-transform: rotate(-45deg) !important;                    transform: rotate(-45deg) !important;                    background: #777 !important;                }                .page_extloading_spinner > div:before {                    -webkit-transform: rotate(-90deg) !important;                    -moz-transform: rotate(-90deg) !important;                    transform: rotate(-90deg) !important;                    background: #999 !important;                }                .page_extloading_spinner > div:after {                    -webkit-transform: rotate(-135deg) !important;                    -moz-transform: rotate(-135deg) !important;                    transform: rotate(-135deg) !important;                    background: #bbb !important;                };</style><div class="pkt_bm_loading" style="position: fixed; top: 0px; right: 0px;"><div class="page_extloading_spinner"><div></div></div></div></body></html>