<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<title>KMP算法深度解析 - 刘爱贵的专栏 - 博客频道 - CSDN.NET</title>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<meta name="description" content="&#160;摘要：KMP算法是字符串匹配的经典算法，由于其O(m+n)的时间复杂度，至今仍被广泛应用。大道至简，KMP算法非常简洁，然而，其内部却蕴含着玄妙的理论，以至许多人知其然而不知其所以然。本文旨在解开KMP算法的内部玄妙所在，希望能够有助于学习与理解。&#160;1、KMP算法&#160;&#160;&#160; 一种改进的字符串匹配算法，由D.E.Knuth与V.R.Pratt和J.H.Morris同时发现，因此称之为KMP算法" />
<script src="http://static.blog.csdn.net/Scripts/jquery.js" type="text/javascript"></script>
<script src="http://static.blog.csdn.net/scripts/plugins.js" type="text/javascript"></script>
<script src="http://static.blog.csdn.net/scripts/common.js" type="text/javascript"></script>
<link rel="Stylesheet" type="text/css" href="http://static.blog.csdn.net/skin/light_blue/css/style.css" />
<link id="RSSLink" title="RSS" type="application/rss+xml" rel="alternate" href="/liuben/rss/list" />
<link rel="shortcut icon" href="/favicon.ico" />
<link type="text/css" rel="stylesheet" href="http://static.blog.csdn.net/scripts/SyntaxHighlighter/styles/nobg.css" />
</head>
<body>
<script src="http://csdnimg.cn/pubnav/js/pub_topnav_2011.js"type="text/javascript"></script>
<div id="container">
<div id="header">
    <div class="header">
        <div id="blog_title">
            <h1><a href="/liuben">刘爱贵的专栏</a></h1>
            <h2>专注于存储技术的研究与开发</h2>
            <div class="clear"></div>
        </div>
        <div class="clear"></div>
    </div>
</div>
<div id="navigator">
    <div class="navigator_bg"></div>
    <div class="navigator">
        <ul>
            <li id="btnContents"><a href="/liuben?viewmode=contents"><span><img src="http://static.blog.csdn.net/images/ico_list.gif">目录视图</span></a></li>
            <li id="btnView"><a href="/liuben?viewmode=list"><span><img src="http://static.blog.csdn.net/images/ico_summary.gif">摘要视图</span></a></li>
            <li id="btnRss"><a href="/liuben/rss/list"><span><img src="http://static.blog.csdn.net/images/ico_rss.gif">订阅</span></a></li>
</ul>
    </div>
</div>
<script type="text/javascript">
    var username = "liuben";
    var blog_address = "http://blog.csdn.net/liuben";
    var static_host = "http://static.blog.csdn.net";
    var currentUserName = "";
</script>
        
<div id="body">
<div id="main">
<div class="main">
<div class="notice"> 


<a href="http://cloud.csdn.net/a/20120620/2806805.html" target="_blank"><font color=red>用开源IaaS构建自己的云——OpenStack征稿启事
</font></a>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<a href="http://topic.csdn.net/u/20120709/15/2e6511e3-e34f-41d7-9f71-a47bb4f8c9fa.html" target="_blank"><font color=red>CSDN社区7月"畅谈加班 赢程序员杂志"活动火爆上线！！</font></a>
<br>
<a href="http://blog.csdn.net/shiningxyy/article/details/7717035" target="_blank"><font color=blue>
iOS & Android DevCamp社区会员特惠限时抢票！</font></a>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<a href="http://topic.csdn.net/u/20120704/14/c98b3641-359f-4bea-b111-21c409db8819.html" target="_blank"><font color=red>CSDN账号全站整合公告
</font></a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<a href="http://adclk.thinkmedia.cn/clk/pid=2000/media=CSDN.CN/place=1Clt1/size=760x90" target="_blank"><font color=blue>不用买彩票，就有408万！</font></a>


</div><script type="text/javascript" src="http://static.blog.csdn.net/scripts/ad.js"></script>

<div id="article_details" class="details">
    <div class="article_title">
    <span class="ico ico_type_Original"></span>
    <h3>
        <span class="link_title"><a href="/liuben/article/details/4409505">
        KMP算法深度解析
        </a></span>
    </h3>
</div>

        
    <div class="article_manage">
        <span class="link_categories">
        分类：
            <a href="/liuben/article/category/373757">数据结构与算法</a> 
            <a href="/liuben/article/category/373751">数据存储</a> 
            <a href="/liuben/article/category/378183">C/C++</a> 
        </span>
    <span class="link_postdate">2009-08-04 22:59</span>
    <span class="link_view" title="阅读次数">41452人阅读</span>
    <span class="link_comments" title="评论次数"><a href="#comments">评论</a>(42)</span>
    <span class="link_collect"><a href="javascript:void(0);" onclick="javascript:collectArticle('KMP算法深度解析','4409505');return false;" title="收藏">收藏</a></span>
    <span class="link_report"><a href="#report"  onclick="javascript:report(4409505,2);return false;" title="举报">举报</a></span>
    
</div>

    
<div id="article_content" class="article_content">
    <p>&nbsp;摘要：KMP算法是字符串匹配的经典算法，由于其O(m+n)的时间复杂度，至今仍被广泛应用。大道至简，KMP算法非常简洁，然而，其内部却蕴含着玄妙的理论，以至许多人知其然而不知其所以然。本文旨在解开KMP算法的内部玄妙所在，希望能够有助于学习与理解。</p>
<p>&nbsp;</p>
<p>1、KMP算法<br />&nbsp;&nbsp;&nbsp; 一种改进的字符串匹配算法，由D.E.Knuth与V.R.Pratt和J.H.Morris同时发现，因此称之为KMP算法。此算法可以在O(n+m)的时间数量级上完成串的模式匹配操作，其基本思想是：每当匹配过程中出现字符串比较不等时，不需回溯指针，而是利用已经得到的&ldquo;部分匹配&rdquo;结果将模式向右&ldquo;滑动&rdquo;尽可能远的一段距离，继续进行比较。</p>
<p>&nbsp;</p>
<p>2、基于有限自动机理解算法<br />&nbsp;&nbsp;&nbsp; KMP 算法看似简单，其实要完全理解还是有困难的。KMP算法其实可以看成是一个有限自动机，分为 2 部分：第一部分自动机的构造 ( 对应一般的说法就是失效函数，转移函数， overlap 函数 ) ，第二部分在自动机上搜索过程。举个例子： 目标串 T = acabaabaabcacaabc; 模式串 P=abaabcac ；根据模式串构造自动机，向前的箭头表示搜索前进的方向。向后的箭头表示不匹配的回溯，即失效函数，或者状态变迁函数。例如：<br />&nbsp;f(j=1) = 0;<br />&nbsp;f(j=2) = 0;<br />&nbsp;f(j=3) = 1;<br />&nbsp;f(j=4) = 1;<br />&nbsp;f(j=5) = 2;<br />&nbsp;f(j=6) = 0;<br />&nbsp;f(j=7) = 1;</p>
<p>&nbsp;&nbsp;&nbsp; KMP本质上是构造了DFA并进行了模拟，因此很显然一旦从模版T构造了自动机D，用D去匹配主串S的过程就是线性的。KMP最引人入胜的地方就在于构造D的自匹配过程，它充分利用了D是一个DAG的性质，使得构造过程也是线性的。KMP算法不需要计算变迁函数，只用到辅助数组Next，即模式串自身的特征向量。特征向量可以用模式与其自身进行比较，预先计算出来，它可用于加快字符串匹配算法与有限自动机匹配器的执行速度。</p>
<p><img src="http://p.blog.csdn.net/images/p_blog_csdn_net/liuben/EntryImages/20090804/kmp.jpg" alt="" width="523" height="325" /></p>
<p>&nbsp;&nbsp; <br />3、Next特征数组构造<br />&nbsp;&nbsp;&nbsp; 模式串P开头的任意个字符，把它称为前缀子串，如p0p1p2&hellip;pm-1。在P的第i位置的左边，取出k个字符，称为i位置的左子串，即pi-k+1... pi-2 pi-1 pi。求出最长的（最大的k）使得前缀子串与左子串相匹配称为，在第i位的最长前缀串。第i位的最长前缀串的长度k就是模板串P在位置i上的特征数n[i]特征数组成的向量称为该模式串的特征向量。<br />&nbsp;&nbsp; 可以证明对于任意的模式串p=p0p1&hellip;pm-1,确实存在一个由模式串本身唯一确定的与目标串无关的数组next，计算方法为：<br />&nbsp;&nbsp; (1)&nbsp; 求p0&hellip;pi-1中最大相同的前缀和后缀的长度k;<br />&nbsp;&nbsp; (2)&nbsp; next[i] = k;</p>
<p>&nbsp;&nbsp; 作为特殊情况，当i=0时，令next[i] = -1;显然，对于任意i(0&le;i&lt;m)，有next[i] &lt; i;假定已经计算得到next[i], 那么next[i+1] = ? 特征数ni ( -1&le; ni &le; i )是递归定义的，定义如下：<br />&nbsp;&nbsp; (1) n[0] ＝ -1，对于i &gt; 0的n[i] ，假定已知前一位置的特征数 n[i-1]＝ k ；<br />&nbsp;&nbsp; (2) 如果pi ＝ pk ，则n[i] ＝ k＋1 ；<br />&nbsp;&nbsp; (3) 当pi &ne; pk 且k&ne;0时，则令k ＝ n [k -1] ; 让(3)循环直到条件不满足；<br />&nbsp;&nbsp; (4) 当qi &ne; qk 且k ＝ 0时，则ni ＝ 0;</p>
<p>&nbsp;&nbsp; 根据以上分析，可以得到Next特征数组的计算方法，算法代码如下：<br /><textarea cols="50" rows="15" name="code" class="cpp">void get_next(SString T, int &amp;next[])
{
	//求模式串T的next函数值并存入数组next
	i = 1; next[1] = 0; j = 0;
	while (i &lt; T[0])
	{
		if(j ==0 || T[i] == T[j])
		{
			++i; ++j; next[i] = j;
		} 
		else 
		{
			j = next[j];
		}	
	}
}</textarea> </p>
<p>&nbsp;&nbsp; 文献[5]中解释了以上计算方法存在一定缺陷，存在多比较的情况，可对其进行修正，得到如下算法：</p>
<p><textarea cols="50" rows="15" name="code" class="cpp">void get_next(SString T, int &amp;next[])
{
	//求模式串T的next函数值并存入数组next
	i = 1; next[1] = 0; j = 0;
	while (i &lt; T[0])
	{
		if(j ==0 || T[i] == T[j])
		{
			++i; ++j;
			if (T[i] != T[j])
				next[i] = j;
			else
				next[i] = next[j];
		} 
		else 
		{
			j = next[j];
		}	
	}
}</textarea>&nbsp;</p>
<p><br />&nbsp;&nbsp;&nbsp;4、算法实现<br />&nbsp;&nbsp; KMP算法的难点就是有限自动机的构造和特征向量的计算。解决了这两个问题后，具体匹配算法就很简单了。</p>
<p>&nbsp;&nbsp; int&nbsp;&nbsp; Index_KMP(SString&nbsp;&nbsp; S,SString&nbsp;&nbsp; T,int&nbsp;&nbsp; pos){&nbsp; <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //利用模式串T的next函数求T在主串S中第pos个字符之后的位置的KMP算法。&nbsp; <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //其中，T非空，1&le;pos&le;StrLength(S)。&nbsp; <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; i=pos;&nbsp;&nbsp; j=1;&nbsp; <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; while(i &lt;= S[0] &amp;&amp; j&lt;= T[0]){&nbsp; <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if(j == 0 || S[i] == T[j]) { ++i; ++j; }//继续比较后继字符&nbsp; <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; else&nbsp;&nbsp; j = next[j];//模式串象右移动&nbsp; <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }&nbsp; <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if(j&gt;T[0])&nbsp;&nbsp; return&nbsp;&nbsp; i-T[0];//匹配成功&nbsp; <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; else&nbsp;&nbsp; return&nbsp;&nbsp; 0;&nbsp; <br />&nbsp; &nbsp;}//Index_KMP&nbsp;&nbsp; </p>
<p><br />&nbsp;&nbsp;&nbsp; 算法相关理论分析与证明，以及算法复杂性分析，若感兴趣请参考文献[3]、[4]、[5]，这里不再赘述。</p>
<p>&nbsp;</p>
<p>5、参考文献<br />[1] <a href="http://wansishuang.javaeye.com/blog/402018">http://wansishuang.javaeye.com/blog/402018</a><br />[2] <a href="http://richardxx.yo2.cn/articles/kmp">http://richardxx.yo2.cn/articles/kmp</a>和extend-kmp算法.html <br />[3] KMP算法讲义PPT(Hu Junfeng, Peking University)<br />[4] 算法导论(第32章 字符串匹配)<br />[5] 数据结构(第4章 串)</p>
</div>
<div class="share_buttons" id="sharePanel"></div>
<!--192.168.1.237 2012-7-22 1:48:14-->
<div class="article_next_prev">
        <li class="prev_article">
            <span>上一篇：</span><a href="/liuben/article/details/4389490">IDC存储软件定义的七个主要类别</a></li>
        <li class="next_article">
            <span>下一篇：</span><a href="/liuben/article/details/4494555">快照（Snapshot）技术发展综述</a></li>
</div>


</div>
<div id="ad_cen"></div>
<script type="text/javascript">
    new Ad(4, 'ad_cen');
</script>
<div id="comment_title" class="panel_head">查看评论<a name="comments"></a></div>
<div id="comment_list"></div>
<div id="comment_bar"></div>
<div id="comment_form"></div>
<div class="announce">* 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场<a name="reply"></a><a name="quote"></a></div>
<script type="text/javascript">
    var fileName = '4409505';
    var commentscount = 42;
    var islock = false
</script>
<script type="text/javascript" src="http://static.blog.csdn.net/scripts/comment.js"></script>
<div id="ad_bot"></div>
<script type="text/javascript">
    new Ad(5, 'ad_bot');
</script>
<div id="report_dialog"></div>


<div class="clear"></div>
</div>
</div>

<div id="side">
    <div class="side">
<div id="panel_Profile" class="panel">
    <ul class="panel_head"><span>个人资料</span></ul>
    <ul class="panel_body profile">
        <div id="blog_userface">
            <a href="http://my.csdn.net/liuben" target="_blank">
            <img src="http://avatar.csdn.net/A/A/A/1_liuben.jpg" title="访问我的空间" style="max-width:90%"/>
            </a>
            <br />
            <span><a href="http://my.csdn.net/liuben" target="_blank">liuben</a></span>
        </div>
<div class="interact">
<!--<a href="#" class="attented" title="已关注"></a>-->
<a href="#" class="attent" id="span_add_follow" title="[加关注]"></a>
<a href="http://my.csdn.net/my/letter/send/liuben" class="letter" title="[发私信]"></a>
</div>
        <div id="blog_medal">
        </div>
        <ul id="blog_rank">
            <li>访问：<span>435154次</span></li>
            <li>积分：<span>5738分</span></li>
            <li>排名：<span>第487名</span></li>
        </ul>
        <ul id="blog_statistics">
            <li>原创：<span>129篇</span></li>
            <li>转载：<span>15篇</span></li>
            <li>译文：<span>0篇</span></li>
            <li>评论：<span>1508条</span></li>
        </ul>
    </ul>
</div>
<script type="text/javascript">
    var _blogger = 'liuben';
</script>
<script type='text/javascript'>
    $(document).ready(function () {
        var un = getUN().toLowerCase();
        if (un == _blogger.toLowerCase()) {
            $('.interact').hide();
        } else if(un) {
            var url = "http://my.csdn.net/index.php/follow/check_is_followed/" + encodeURIComponent(un) + "/" + encodeURIComponent(_blogger) + "?jsonpcallback=?";
            $.getJSON(url, {}, function (data) {
                if (data.succ == 1 && data.info == 1) {
                    $('#span_add_follow').attr('class', 'attented');
                } else {
                    $('#span_add_follow').click(guanzhu);
                }
            }, 'json');
        }
    });
function guanzhu() {
    var url = "http://my.csdn.net/index.php/follow/do_follow?jsonpcallback=?";
    $.getJSON(url, { "username": _blogger }, function (data) {
        if (data.succ == 1) {
            alert('关注成功！');
            $('#span_add_follow').attr('class', 'attented').click(function () { return false; });
        } else {
            alert(data.msg);
        }
    });
    return false;
}
function getUN() {
    var m = document.cookie.match(new RegExp("(^| )UserName=([^;]*)(;|$)"));
    if (m) return m[2];
    else return '';
}
</script>

<div class="panel" id="panel_Search">
    <ul class="panel_head"><span>文章搜索</span></ul>
    <ul class="panel_body">
        <form id="frmSearch" action="http://so.csdn.net/search" class="form_search" target="_blank">
        <span><input id="inputSearch" type="text" class="blogsearch" title="请输入关键字" /></span>
        <input id="btnSubmit" type="submit" value="搜索" title="search in blog" />
        <input type="hidden" name="q" id="inputQ" />
        <input type="hidden" name="t" value="blog" />
        <a id="btnSearchBlog" target="_blank"></a>
        </form>
    </ul>
</div><div id="panel_Category" class="panel">
    <ul class="panel_head"><span>文章分类</span></ul>
    <ul class="panel_body">
        <li>
        <a href="http://blog.csdn.net/liuben/article/category/378183">C/C++</a><span>(25)</span>
        </li>
        <li>
        <a href="http://blog.csdn.net/liuben/article/category/373050">GNU/LINUX</a><span>(39)</span>
        </li>
        <li>
        <a href="http://blog.csdn.net/liuben/article/category/524941">Windows相关</a><span>(3)</span>
        </li>
        <li>
        <a href="http://blog.csdn.net/liuben/article/category/373751">数据存储</a><span>(64)</span>
        </li>
        <li>
        <a href="http://blog.csdn.net/liuben/article/category/373752">数据挖掘</a><span>(4)</span>
        </li>
        <li>
        <a href="http://blog.csdn.net/liuben/article/category/373757">数据结构与算法</a><span>(28)</span>
        </li>
        <li>
        <a href="http://blog.csdn.net/liuben/article/category/373035">程序人生</a><span>(36)</span>
        </li>
        <li>
        <a href="http://blog.csdn.net/liuben/article/category/616625">计算机理论</a><span>(21)</span>
        </li>
    </ul>
</div><div id="panel_Archive" class="panel">
    <ul class="panel_head"><span>文章存档</span></ul>
    <ul class="panel_body">
        <div id="archive_list">
        <!--归档统计-->
        <li><a href="http://blog.csdn.net/liuben/article/month/2012/07">2012年07月</a><span>(1)</span></li><li><a href="http://blog.csdn.net/liuben/article/month/2012/05">2012年05月</a><span>(1)</span></li><li><a href="http://blog.csdn.net/liuben/article/month/2012/03">2012年03月</a><span>(1)</span></li><li><a href="http://blog.csdn.net/liuben/article/month/2012/02">2012年02月</a><span>(3)</span></li><li><a href="http://blog.csdn.net/liuben/article/month/2011/12">2011年12月</a><span>(4)</span></li><li><a href="http://blog.csdn.net/liuben/article/month/2011/11">2011年11月</a><span>(1)</span></li><li><a href="http://blog.csdn.net/liuben/article/month/2011/10">2011年10月</a><span>(1)</span></li><li><a href="http://blog.csdn.net/liuben/article/month/2011/09">2011年09月</a><span>(1)</span></li><li><a href="http://blog.csdn.net/liuben/article/month/2011/08">2011年08月</a><span>(1)</span></li><li><a href="http://blog.csdn.net/liuben/article/month/2011/07">2011年07月</a><span>(2)</span></li><li><a href="http://blog.csdn.net/liuben/article/month/2011/06">2011年06月</a><span>(1)</span></li><li><a href="http://blog.csdn.net/liuben/article/month/2011/05">2011年05月</a><span>(2)</span></li><li><a href="http://blog.csdn.net/liuben/article/month/2011/04">2011年04月</a><span>(3)</span></li><li><a href="http://blog.csdn.net/liuben/article/month/2011/03">2011年03月</a><span>(3)</span></li><li><a href="http://blog.csdn.net/liuben/article/month/2011/02">2011年02月</a><span>(1)</span></li><li><a href="http://blog.csdn.net/liuben/article/month/2011/01">2011年01月</a><span>(2)</span></li><li><a href="http://blog.csdn.net/liuben/article/month/2010/12">2010年12月</a><span>(2)</span></li><li><a href="http://blog.csdn.net/liuben/article/month/2010/11">2010年11月</a><span>(2)</span></li><li><a href="http://blog.csdn.net/liuben/article/month/2010/10">2010年10月</a><span>(2)</span></li><li><a href="http://blog.csdn.net/liuben/article/month/2010/09">2010年09月</a><span>(3)</span></li><li><a href="http://blog.csdn.net/liuben/article/month/2010/08">2010年08月</a><span>(2)</span></li><li><a href="http://blog.csdn.net/liuben/article/month/2010/07">2010年07月</a><span>(3)</span></li><li><a href="http://blog.csdn.net/liuben/article/month/2010/06">2010年06月</a><span>(3)</span></li><li><a href="http://blog.csdn.net/liuben/article/month/2010/05">2010年05月</a><span>(3)</span></li><li><a href="http://blog.csdn.net/liuben/article/month/2010/04">2010年04月</a><span>(3)</span></li><li><a href="http://blog.csdn.net/liuben/article/month/2010/03">2010年03月</a><span>(2)</span></li><li><a href="http://blog.csdn.net/liuben/article/month/2010/02">2010年02月</a><span>(2)</span></li><li><a href="http://blog.csdn.net/liuben/article/month/2010/01">2010年01月</a><span>(2)</span></li><li><a href="http://blog.csdn.net/liuben/article/month/2009/12">2009年12月</a><span>(8)</span></li><li><a href="http://blog.csdn.net/liuben/article/month/2009/11">2009年11月</a><span>(8)</span></li><li><a href="http://blog.csdn.net/liuben/article/month/2009/10">2009年10月</a><span>(4)</span></li><li><a href="http://blog.csdn.net/liuben/article/month/2009/09">2009年09月</a><span>(3)</span></li><li><a href="http://blog.csdn.net/liuben/article/month/2009/08">2009年08月</a><span>(2)</span></li><li><a href="http://blog.csdn.net/liuben/article/month/2009/07">2009年07月</a><span>(1)</span></li><li><a href="http://blog.csdn.net/liuben/article/month/2009/06">2009年06月</a><span>(3)</span></li><li><a href="http://blog.csdn.net/liuben/article/month/2009/05">2009年05月</a><span>(6)</span></li><li><a href="http://blog.csdn.net/liuben/article/month/2009/04">2009年04月</a><span>(2)</span></li><li><a href="http://blog.csdn.net/liuben/article/month/2009/03">2009年03月</a><span>(7)</span></li><li><a href="http://blog.csdn.net/liuben/article/month/2009/02">2009年02月</a><span>(1)</span></li><li><a href="http://blog.csdn.net/liuben/article/month/2009/01">2009年01月</a><span>(2)</span></li><li><a href="http://blog.csdn.net/liuben/article/month/2008/12">2008年12月</a><span>(1)</span></li><li><a href="http://blog.csdn.net/liuben/article/month/2008/11">2008年11月</a><span>(1)</span></li><li><a href="http://blog.csdn.net/liuben/article/month/2008/06">2008年06月</a><span>(1)</span></li><li><a href="http://blog.csdn.net/liuben/article/month/2008/05">2008年05月</a><span>(2)</span></li><li><a href="http://blog.csdn.net/liuben/article/month/2008/04">2008年04月</a><span>(11)</span></li><li><a href="http://blog.csdn.net/liuben/article/month/2008/03">2008年03月</a><span>(24)</span></li>
        </div>
    </ul>
</div>
<div id="hotarticls" class="panel">
    <ul class="panel_head"><span>阅读排行</span></ul>
    <ul class="panel_body itemlist">
        <li>
            <a href="/liuben/article/details/4409505" title="KMP算法深度解析">KMP算法深度解析</a><span>(41452)</span>
        </li>
        <li>
            <a href="/liuben/article/details/7340995" title="一位老码农的编程简史">一位老码农的编程简史</a><span>(33793)</span>
        </li>
        <li>
            <a href="/liuben/article/details/5946583" title="Taobao分布式文件系统TFS简析">Taobao分布式文件系统TFS简析</a><span>(22378)</span>
        </li>
        <li>
            <a href="/liuben/article/details/6196290" title="分布式存储系统设计的若干原则">分布式存储系统设计的若干原则</a><span>(18089)</span>
        </li>
        <li>
            <a href="/liuben/article/details/5793706" title="数据同步算法研究">数据同步算法研究</a><span>(17154)</span>
        </li>
        <li>
            <a href="/liuben/article/details/6284551" title="GlusterFS集群文件系统研究">GlusterFS集群文件系统研究</a><span>(16399)</span>
        </li>
        <li>
            <a href="/liuben/article/details/6041778" title="存储技术趋势预测与分析">存储技术趋势预测与分析</a><span>(12496)</span>
        </li>
        <li>
            <a href="/liuben/article/details/5829083" title="重复数据删除(De-duplication)技术研究">重复数据删除(De-duplication)技术研究</a><span>(12183)</span>
        </li>
        <li>
            <a href="/liuben/article/details/5864583" title="为什么咱中国有影响力的开源软件那么少？">为什么咱中国有影响力的开源软件那么少？</a><span>(11606)</span>
        </li>
        <li>
            <a href="/liuben/article/details/6064045" title="高效存储技术研究">高效存储技术研究</a><span>(11168)</span>
        </li>
    </ul>
</div>
<div id="hotarticls2" class="panel">
    <ul class="panel_head"><span>评论排行</span></ul>
    <ul class="panel_body itemlist">
        <li>
            <a href="/liuben/article/details/5864583" title="为什么咱中国有影响力的开源软件那么少？">为什么咱中国有影响力的开源软件那么少？</a><span>(262)</span>
        </li>
        <li>
            <a href="/liuben/article/details/7340995" title="一位老码农的编程简史">一位老码农的编程简史</a><span>(209)</span>
        </li>
        <li>
            <a href="/liuben/article/details/5793706" title="数据同步算法研究">数据同步算法研究</a><span>(93)</span>
        </li>
        <li>
            <a href="/liuben/article/details/6284551" title="GlusterFS集群文件系统研究">GlusterFS集群文件系统研究</a><span>(76)</span>
        </li>
        <li>
            <a href="/liuben/article/details/5946583" title="Taobao分布式文件系统TFS简析">Taobao分布式文件系统TFS简析</a><span>(69)</span>
        </li>
        <li>
            <a href="/liuben/article/details/5829083" title="重复数据删除(De-duplication)技术研究">重复数据删除(De-duplication)技术研究</a><span>(67)</span>
        </li>
        <li>
            <a href="/liuben/article/details/7295438" title="一位存储研发者的图书清单">一位存储研发者的图书清单</a><span>(55)</span>
        </li>
        <li>
            <a href="/liuben/article/details/7163482" title="基于开源软件构建高性能集群NAS系统">基于开源软件构建高性能集群NAS系统</a><span>(49)</span>
        </li>
        <li>
            <a href="/liuben/article/details/4409505" title="KMP算法深度解析">KMP算法深度解析</a><span>(42)</span>
        </li>
        <li>
            <a href="/liuben/article/details/6064045" title="高效存储技术研究">高效存储技术研究</a><span>(35)</span>
        </li>
    </ul>
</div>
<div id="newcomments" class="panel">
<ul class="panel_head"><span>最新评论</span></ul>
<ul class="panel_body itemlist">
    <li>
    <a href="/liuben/article/details/4581970#comments">RAID技术发展综述</a>
    <p style="margin:0px;">fengchaokobe:
很不错，受教了！表1中RAID1的读性能应该是高吧!
    </p>
    </li>
    <li>
    <a href="/liuben/article/details/7163482#comments">基于开源软件构建高性能集群NAS系统</a>
    <p style="margin:0px;">liuben:
@geldqb:如果自己的明确的需求，直接进入主题就行。如果就是研究源码，建议先看主框架部分，再看x...
    </p>
    </li>
    <li>
    <a href="/liuben/article/details/7163482#comments">基于开源软件构建高性能集群NAS系统</a>
    <p style="margin:0px;">geldqb:
爱贵兄，请问如果尝试阅读glusterfs的源码的话，有没有推荐的顺序？希望可以经常向你请教，当然尽...
    </p>
    </li>
    <li>
    <a href="/liuben/article/details/7163482#comments">基于开源软件构建高性能集群NAS系统</a>
    <p style="margin:0px;">geldqb:
必须得顶。
    </p>
    </li>
    <li>
    <a href="/liuben/article/details/7163482#comments">基于开源软件构建高性能集群NAS系统</a>
    <p style="margin:0px;">liuben:
@test111111one1:估计是cifs客户端的问题，XP下是SMB1，目前不支持。我们在li...
    </p>
    </li>
    <li>
    <a href="/liuben/article/details/7163482#comments">基于开源软件构建高性能集群NAS系统</a>
    <p style="margin:0px;">test111111one1:
爱贵兄：使用GlusterFS + CTDB ，前端使用CIFS 写数据的时候，在一个node 宕机...
    </p>
    </li>
    <li>
    <a href="/liuben/article/details/7163482#comments">基于开源软件构建高性能集群NAS系统</a>
    <p style="margin:0px;">frankzyw:
正在学习，谢谢分享
    </p>
    </li>
    <li>
    <a href="/liuben/article/details/6455736#comments">Lustre I/O性能特点与最佳实践</a>
    <p style="margin:0px;">sumiyixin:
恩恩~谢谢~@liuben:
    </p>
    </li>
    <li>
    <a href="/liuben/article/details/6455736#comments">Lustre I/O性能特点与最佳实践</a>
    <p style="margin:0px;">liuben:
@sumiyixin: Lustre目前仍然是单元数据服务器，可以做failover。Lustre开...
    </p>
    </li>
    <li>
    <a href="/liuben/article/details/6455736#comments">Lustre I/O性能特点与最佳实践</a>
    <p style="margin:0px;">sumiyixin:
你好~我想请问下，lustre最新的版本中仍只支持单元数据服务器么？还有网上说Lustre2.0以后...
    </p>
    </li>
</ul>
</div>
<div id="custom_column_959485" class="panel">
    <ul class="panel_head"><span>博文自荐</span></ul>
    <ul class="panel_body">
        <ul><li><a href="http://blog.csdn.net/liuben/archive/2009/12/21/5050697.aspx" target=_blank>字符串Hash函数评估</a></li><li><a href="http://blog.csdn.net/liuben/archive/2009/08/04/4409505.aspx" target=_blank>KMP算法深度解析</a></li><li><a href="http://blog.csdn.net/liuben/archive/2009/09/22/4581970.aspx" target=_blank>RAID技术发展综述</a></li><li><a href="http://blog.csdn.net/liuben/archive/2009/08/28/4494555.aspx" target=_blank>快照（Snapshot）技术发展综述</a></li><li><a href="http://blog.csdn.net/liuben/archive/2010/02/28/5333752.aspx" target=_blank>从研发角度谈存储技术的学习</a></li><li><a href="http://blog.csdn.net/liuben/archive/2010/03/11/5368300.aspx" target=_blank>存储学习之路</a></li><li><a href="http://blog.csdn.net/liuben/archive/2010/01/09/5166538.aspx" target=_blank>基于Dedup的数据打包技术</a></li><li><a href="http://blog.csdn.net/liuben/archive/2010/03/19/5395831.aspx" target=_blank>WSIO－基于WEB服务的远程文件I/O</a></li><li><a href="http://sourceforge.net/projects/deduputil/" target=_blank>dedup util</a></li><li><a href="http://blog.csdn.net/liuben/archive/2010/08/06/5793706.aspx" target=_blank>数据同步算法研究</a></li><li><a href="http://blog.csdn.net/liuben/archive/2010/08/21/5829083.aspx" target=_blank>重复数据删除(De-duplication)技术研究</a></li><li><a href="http://blog.csdn.net/liuben/archive/2010/12/08/6064045.aspx" target=_blank>高效存储技术研究</a></li><li><a href="http://blog.csdn.net/liuben/archive/2011/03/28/6284551.aspx" target=_blank>GlusterFS集群文件系统研究</a></li><li><a href="http://blog.csdn.net/liuben/archive/2011/04/14/6324133.aspx" target=_blank>深入理解数据压缩与重复数据删除</a></li><li><a href="http://blog.csdn.net/liuben/archive/2011/04/29/6372823.aspx" target=_blank> StorNext海量小文件性能测试与调优</a></li><li><a href="http://blog.csdn.net/liuben/archive/2011/05/15/6422700.aspx" target=_blank>集群NAS技术架构</a></li><li><a href="http://blog.csdn.net/liuben/archive/2011/05/30/6455736.aspx" target=_blank>Lustre I/O性能特点与最佳实践</a></li></ul>
    </ul>
</div><div id="custom_column_959486" class="panel">
    <ul class="panel_head"><span>我的软件</span></ul>
    <ul class="panel_body">
        <ul><li><a href="http://blog.csdn.net/liuben/archive/2010/06/02/5641891.aspx" target=_blank>dedup util</a></li><li><a href="http://download.enet.com.cn/html/060482005081601.html" target=_blank>BootU</a></li><li><a href="http://download.enet.com.cn/html/080582005081602.html" target=_blank>IHEP五子棋</a></li><li><a href="http://blog.csdn.net/liuben/archive/2010/03/19/5395831.aspx" target=_blank>WSIO</a></li><li><a href="http://download.enet.com.cn/html/272442006051201.html" target=_blank>SPA相册</a></li><li><a href="http://download.enet.com.cn/html/030792005081702.html" target=_blank>Tiny编译器</a></li><li><a href="http://code.google.com/p/libsync" target=_blank>libsync</a></li></ul>
    </ul>
</div><div id="custom_column_959487" class="panel">
    <ul class="panel_head"><span>资源链接</span></ul>
    <ul class="panel_body">
        <ul><li><a href="http://bbs.doit.com.cn/" target=_blank>DOIT论坛</a></li><li><a href="http://bbs.chinaunix.net/" target=_blank>ChinaUnix论坛</a></li><li><a href="http://www.dostor.com/" target=_blank>存储在线</a></li><li><a href="http://www.watchstor.com/" target=_blank>WatchStor</a></li><li><a href="http://www.infostor.com/index.html" target=_blank>InfoStor</a></li><li><a href="http://www.gartner.com/technology/home.jsp" target=_blank>Gartner</a></li><li><a href="http://www.usenix.org/events/fast/" target=_blank>FAST</a></li><li><a href="http://www.snia.org" target=_blank>SNIA</a></li><li><a href="https://sourceforge.net/projects/deduputil/" target=_blank>dedup util</a></li><li><a href="http://www.tektalk.org/" target=_blank>弯曲评论</a></li></ul>
    </ul>
</div>    </div>
    <div class="clear"></div>
</div>

<div class="clear"></div>
</div>
<script type="text/javascript" src="http://static.blog.csdn.net/scripts/SyntaxHighlighter/shCore-src.js"></script>
<script type="text/javascript" src="http://static.blog.csdn.net/scripts/ZeroClipboard/ZeroClipboard.js"></script>
<script type="text/javascript" src="http://static.blog.csdn.net/scripts/article_code.js"></script>

<script type="text/javascript" src="http://medal.blog.csdn.net/scripts/show.js"></script>
<script type="text/javascript" src="http://medal.blog.csdn.net/showblogmedal.ashx?blogid=79517"></script>
<script type="text/javascript">document.write("<img src=http://counter.csdn.net/pv.aspx?id=24 border=0 width=0 height=0>");</script>

<script type="text/javascript" src="http://csdnimg.cn/pubfooter/js/publib_footer.js"></script>

<script type="text/javascript" src="http://www.csdn.net/ui/scripts/Csdn/counter.js"></script>


</div>
</body>
</html>